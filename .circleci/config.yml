# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2
jobs:
    build:
        docker:
            - image: aagnone/circleci-hugo:latest
            user: user
        environment:
            HUGO_BUILD_DIR: /opt/hugo/public
        steps:
            - checkout

            # # Download and cache dependencies
            # - restore_cache:
            #     keys:
            #       - v1-dependencies-{{ checksum "requirements.txt" }}
            #       # fallback to using the latest cache if no exact match is found
            #       - v1-dependencies-

            - run: git submodule sync && git submodule update --init

            # - save_cache:
            #     paths:
            #       - ./venv
            #     key: v1-dependencies-{{ checksum "requirements.txt" }}

            - run:
                name: Local build
                command: |
                    HUGO_ENV=production hugo -v -d $HUGO_BUILD_DIR
            - run:
                name: Pre-verification
                command: |
                    echo Not running htmlproofer $HUGO_BUILD_DIR --allow-hash-href --check-html --empty-alt-ignore --disable-external
            - run:
                name: Blog post syndication
                command: |
                    echo "skip"
                    bash .circleci/blog_syndication.sh
            - run:
                name: run tests
                command: |
                    echo "Tests here"

    deploy:
        docker:
            - image: aagnone/circleci-hugo:latest
            user: user
        steps:
            - checkout

            - run:
                  name: Deploy to website
                  command: |
                      bash .circleci/blog_syndication.sh

            - store_artifacts:
                path: deploy.log

workflows:
    version: 2
    build-and-deploy:
        jobs:
            - build
            - deploy:
                  requires:
                      - build
                  # only deploy from the master branch
                  filters:
                      branches:
                          only: master
